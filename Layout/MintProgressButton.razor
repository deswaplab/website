<button
    class="@ButtonStyle @CursorNotAllowedClass"
    @onclick="ButtonClicked"
>
    <div class="flex items-center justify-between">
        <h3 class="font-medium">@Text</h3>
        @if (Finished)
        {
            <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 16 12">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                    d="M1 5.917 5.724 10.5 15 1.5" />
            </svg>
        }
        else
        {
            <svg class="rtl:rotate-180 w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
            </svg>
        }
    </div>
</button>

@code {
    [Parameter]
    public string Text {get; set;} = "No Text";

    [Parameter]
    public bool Finished {get; set;} = false;

    [Parameter]
    public bool Disabled {get; set;} = false;

    [Parameter]
    public EventCallback<MouseEventArgs> ClickCallback {get; set;}

    private async Task ButtonClicked()
    {
        await ClickCallback.InvokeAsync();
    }


    public string CursorNotAllowedClass => Disabled ? "cursor-not-allowed" : "";

    public string ButtonStyle => Finished ? "w-full p-4 text-green-700 border border-green-300 rounded-lg bg-green-50 dark:bg-gray-800 dark:border-green-800 dark:text-green-400" :
        (Disabled ? "w-full p-4 text-blue-700 bg-blue-100 border border-blue-300 rounded-lg dark:bg-gray-800 dark:border-blue-800 dark:text-blue-400" : 
        "w-full p-4 text-blue-700 bg-blue-100 hover:bg-blue-200 border border-blue-300 rounded-lg dark:bg-gray-800 dark:hover:bg-gray-900 dark:border-blue-800 dark:text-blue-400");
}
