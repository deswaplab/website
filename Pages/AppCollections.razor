@page "/app/collections"
@layout AppLayout
@inject StateContainer StateContainer

<PageTitle>App collections</PageTitle>


<section class="bg-gray-50 dark:bg-gray-900">
<div class="flex flex-col items-center justify-center px-64 mx-auto md:h-screen lg:py-0">
    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
                <th scope="col" class="px-6 py-3">
                    Name
                </th>
                <th scope="col" class="px-6 py-3">
                    Contract Address
                </th>
                <th scope="col" class="px-6 py-3">
                    Category
                </th>
                <th scope="col" class="px-6 py-3">
                    Network
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach(var collection in collections)
            {
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                    <a href=@($"{collection.Network.OpenseaHost}/{collection.NftAddress}") target="_blank">@collection.Name</a>
                </th>
                <td class="px-6 py-4">
                    <a href=@($"{collection.Network.EtherscanHost}/address/{collection.NftAddress}") target="_blank">@collection.NftAddress</a>
                </td>
                <td class="px-6 py-4">
                    Options
                </td>
                <td class="px-6 py-4">
                    Sepolia
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>
</section>

@code {
    public IList<TokenPair> collections {get; set;} = [];

    protected override async Task OnInitializedAsync()
    {
        await Task.CompletedTask;
        var tokenPairs = new TokenPairs();
        if (StateContainer.SelectedChainId > 0 && SupportedNetworks.GetNetwork(StateContainer.SelectedChainId) is not null)
        {
            collections = tokenPairs.FilterByChainId(StateContainer.SelectedChainId);
        }
        else
        {
            collections = tokenPairs.Inner;
        }
    }
}
